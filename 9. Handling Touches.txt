https://facebook.github.io/react-native/docs/handling-touches
https://facebook.github.io/react-native/docs/button

Users interact with mobile apps mainly through touch. 
They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. 
React Native provides components to handle all sorts of common gestures, 
as well as a comprehensive gesture responder system to allow for more advanced gesture recognition, 
but the one component you will most likely be interested in is the basic Button.

Touchables
If the basic button doesn't look right for your app, you can build your own button using any of the 
"Touchable" components provided by React Native. 
The "Touchable" components provide the capability to capture tapping gestures, 
and can display feedback when a gesture is recognized. 
These components do not provide any default styling, however, so you will need to do a bit 
of work to get them looking nicely in your app.

Which "Touchable" component you use will depend on what kind of feedback you want to provide:

Generally, you can use TouchableHighlight anywhere you would use a button or link on web. 
The view's background will be darkened when the user presses down on the button.

You may consider using TouchableNativeFeedback on Android to display 
ink surface reaction ripples that respond to the user's touch.

TouchableOpacity can be used to provide feedback by reducing the opacity of the button, 
allowing the background to be seen through while the user is pressing down.

If you need to handle a tap gesture but you don't want any feedback to be displayed, 
use TouchableWithoutFeedback.

In some cases, you may want to detect when a user presses and holds a view for a set amount of time. 
These long presses can be handled by passing a function to the onLongPress props of any of the 
"Touchable" components.